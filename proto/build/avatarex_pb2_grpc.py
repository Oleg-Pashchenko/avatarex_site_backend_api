# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import avatarex_pb2 as avatarex__pb2
import webhooks_pb2 as webhooks__pb2


class AvatarexServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Signup = channel.unary_unary(
                '/avatarex.AvatarexService/Signup',
                request_serializer=avatarex__pb2.SignupRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.Signin = channel.unary_unary(
                '/avatarex.AvatarexService/Signin',
                request_serializer=avatarex__pb2.SigninRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.Profile = channel.unary_unary(
                '/avatarex.AvatarexService/Profile',
                request_serializer=avatarex__pb2.ProfileRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.Signout = channel.unary_unary(
                '/avatarex.AvatarexService/Signout',
                request_serializer=avatarex__pb2.SignoutRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.Form = channel.unary_unary(
                '/avatarex.AvatarexService/Form',
                request_serializer=avatarex__pb2.FormRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.WebhookActivate = channel.unary_unary(
                '/avatarex.AvatarexService/WebhookActivate',
                request_serializer=webhooks__pb2.WebhookActivateRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.WebhookDeactivate = channel.unary_unary(
                '/avatarex.AvatarexService/WebhookDeactivate',
                request_serializer=webhooks__pb2.WebhookDeactivateRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )
        self.WebhookEvent = channel.unary_unary(
                '/avatarex.AvatarexService/WebhookEvent',
                request_serializer=webhooks__pb2.WebhookEventRequest.SerializeToString,
                response_deserializer=avatarex__pb2.ApiResponse.FromString,
                )


class AvatarexServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Signup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Signin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Profile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Signout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Form(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WebhookActivate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WebhookDeactivate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WebhookEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AvatarexServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Signup': grpc.unary_unary_rpc_method_handler(
                    servicer.Signup,
                    request_deserializer=avatarex__pb2.SignupRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'Signin': grpc.unary_unary_rpc_method_handler(
                    servicer.Signin,
                    request_deserializer=avatarex__pb2.SigninRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'Profile': grpc.unary_unary_rpc_method_handler(
                    servicer.Profile,
                    request_deserializer=avatarex__pb2.ProfileRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'Signout': grpc.unary_unary_rpc_method_handler(
                    servicer.Signout,
                    request_deserializer=avatarex__pb2.SignoutRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'Form': grpc.unary_unary_rpc_method_handler(
                    servicer.Form,
                    request_deserializer=avatarex__pb2.FormRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'WebhookActivate': grpc.unary_unary_rpc_method_handler(
                    servicer.WebhookActivate,
                    request_deserializer=webhooks__pb2.WebhookActivateRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'WebhookDeactivate': grpc.unary_unary_rpc_method_handler(
                    servicer.WebhookDeactivate,
                    request_deserializer=webhooks__pb2.WebhookDeactivateRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
            'WebhookEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.WebhookEvent,
                    request_deserializer=webhooks__pb2.WebhookEventRequest.FromString,
                    response_serializer=avatarex__pb2.ApiResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'avatarex.AvatarexService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AvatarexService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/Signup',
            avatarex__pb2.SignupRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Signin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/Signin',
            avatarex__pb2.SigninRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Profile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/Profile',
            avatarex__pb2.ProfileRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Signout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/Signout',
            avatarex__pb2.SignoutRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Form(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/Form',
            avatarex__pb2.FormRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WebhookActivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/WebhookActivate',
            webhooks__pb2.WebhookActivateRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WebhookDeactivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/WebhookDeactivate',
            webhooks__pb2.WebhookDeactivateRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WebhookEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/avatarex.AvatarexService/WebhookEvent',
            webhooks__pb2.WebhookEventRequest.SerializeToString,
            avatarex__pb2.ApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
